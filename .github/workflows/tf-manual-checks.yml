name: Tf Sanity checks

# manual trigger
on: 
  workflow_dispatch

jobs:
  sanity-checks:
    runs-on: "ubuntu-latest"
    steps:
      - name: Quick Manual Tester
        run: echo "add jobs here for rapid testing!"

# rapid test deploy
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.7

      - name: Format
        id: fmt
        run: terraform -chdir=deploy fmt -check
        continue-on-error: true

      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TFUSER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TFUSER_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Init
        id: init
        run: terraform -chdir=deploy init

      - name: Validate
        id: validate
        run: terraform -chdir=deploy validate -no-color

      - name: Terraform Plan
        # At this time terraform-setup does not let you use ENV vars!!
        run: |
          cat > pipeline.auto.tfvars <<EOF
          db_username = "${{ secrets.TF_VAR_db_username }}"
          db_password = "${{ secrets.TF_VAR_db_password }}"
          EOF
          terraform -chdir=deploy workspace select prod || terraform -chdir=deploy workspace new prod 
          terraform -chdir=deploy plan

      - name: Terraform Apply
        run: |
          cat > pipeline.auto.tfvars <<EOF
          db_username = "${{ secrets.TF_VAR_db_username }}"
          db_password = "${{ secrets.TF_VAR_db_password }}"
          EOF
          terraform -chdir=deploy workspace select prod || terraform -chdir=deploy workspace new prod 
          terraform -chdir=deploy apply -auto-approve

